/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef common_TYPES_H
#define common_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>




typedef struct _SData__isset {
  _SData__isset() : __SERVICENAME(false), __METHOD(false), __PARAM(false) {}
  bool __SERVICENAME;
  bool __METHOD;
  bool __PARAM;
} _SData__isset;

class SData {
 public:

  static const char* ascii_fingerprint; // = "F4A50F0EC638C7F66026F9B6678FD89B";
  static const uint8_t binary_fingerprint[16]; // = {0xF4,0xA5,0x0F,0x0E,0xC6,0x38,0xC7,0xF6,0x60,0x26,0xF9,0xB6,0x67,0x8F,0xD8,0x9B};

  SData() : __SERVICENAME(), __METHOD(), __PARAM() {
  }

  virtual ~SData() throw() {}

  std::string __SERVICENAME;
  std::string __METHOD;
  std::string __PARAM;

  _SData__isset __isset;

  void __set___SERVICENAME(const std::string& val) {
    __SERVICENAME = val;
  }

  void __set___METHOD(const std::string& val) {
    __METHOD = val;
  }

  void __set___PARAM(const std::string& val) {
    __PARAM = val;
    __isset.__PARAM = true;
  }

  bool operator == (const SData & rhs) const
  {
    if (!(__SERVICENAME == rhs.__SERVICENAME))
      return false;
    if (!(__METHOD == rhs.__METHOD))
      return false;
    if (__isset.__PARAM != rhs.__isset.__PARAM)
      return false;
    else if (__isset.__PARAM && !(__PARAM == rhs.__PARAM))
      return false;
    return true;
  }
  bool operator != (const SData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(SData &a, SData &b);



#endif
